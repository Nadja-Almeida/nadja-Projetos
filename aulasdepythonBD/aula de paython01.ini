aula de paython.txt

como sera o paython no frontend
iremos usar classes de variaveis
teremos que implantar oientação de objeto
implemetação linear 
escalonavel
o que e um mvp
classes: produto
dentro dela podera ser criada varias outras classes



Há alguns problemas no código que você compartilhou. Vamos analisá-lo e corrigir os erros:

Atribuição de valores aos atributos:
No método __init__, você está atribuindo os valores dos parâmetros aos atributos da classe de forma incorreta.
Uso incorreto da palavra-chave None:
A palavra None é uma palavra reservada em Python que representa a ausência de valor. No seu código, você está tentando usar None como um nome de atributo, o que é incorreto.
Atributos com nomes iguais aos parâmetros:
Os atributos self.None, self.preco e self.quantidade estão sendo inicializados com os valores dos parâmetros nome, preco e quantidade, respectivamente. No entanto, os atributos estão sendo inicializados com nomes errados.
Aqui está o código corrigido:

python
Copiar código
class Produto:
    def __init__(self, nome, preco, quantidade):
        self.nome = nome  # Corrigido para atribuir o valor do parâmetro 'nome' ao atributo 'nome'
        self.preco = preco  # Corrigido para atribuir o valor do parâmetro 'preco' ao atributo 'preco'
        self.quantidade = quantidade  # Corrigido para atribuir o valor do parâmetro 'quantidade' ao atributo 'quantidade'
Nesta versão corrigida:

Os atributos self.nome, self.preco e self.quantidade são corretamente inicializados com os valores dos parâmetros nome, preco e quantidade, respectivamente.
Os nomes dos atributos correspondem aos nomes corretos que você deseja para representar o nome, preço e quantidade do produto dentro da classe Produto.
Agora você pode criar objetos da classe Produto e acessar esses atributos corretamente:

python
Copiar código
# Exemplo de uso da classe Produto
produto1 = Produto("Camiseta", 29.99, 5)
print(produto1.nome)  # Saída: Camiseta
print(produto1.preco)  # Saída: 29.99
print(produto1.quantidade)  # Saída: 5
Espero que isso ajude a esclarecer e corrigir os problemas no seu código! Se precisar de mais alguma ajuda ou explicação, fique à vontade para perguntar.

desafio

O trabalho com metodos tambem permite criar comportamento e regras utilizando atributos das classes
por Exemplo, podemos criar metodos mostrar_valor_total_estoque(),
que calcula a multiplicação do valor da quantidade e o valor do preço unitario dos produtos disponiveis em estoque.
amostra de como deve aparecer na tela:

nome: refrigerante
preço: R$4,99
quantidade: 25
o valor total  de estoue deste 